target Python{
    fast: True,
    files: [
        ../../config/utils/l_formatter.py, 
        ../../config/utils/time_utils.py, 
        ../../config/utils/singleton_meta.py, 
        ../../config/utils/g_preamble.py, 
        ../../config/utils/handle_recipe.py
    ],
    timeout: 100 ms
}

preamble{=
    from g_preamble import *
=}

reactor Controller {
    output out1
    output out2
    reaction(t) -> out1, out2 {=
      out1.set(1)
      out2.set(2)
    =}
    timer t(0s, 1s)
}

reactor Train {
    input ins
    state received
    reaction(ins) {=
      self.received = ins.value
    =}
}

reactor Door {
    input ins
    state received
    reaction(ins) {=
        self.received = ins.value
    =}
}

main reactor {

    preamble{=
        handler = logging.StreamHandler()
        handler.setFormatter(LFormatter(lf.time.logical_elapsed, TimeFormat.MSECS))
        logger = logging.getLogger()
        logger.setLevel(logging.ERROR)
        logger.addHandler(handler)
    =}
    
    c = new Controller()
    t = new Train()
    d = new Door()
    c.out1 -> t.ins after 1 sec
    c.out2 -> d.ins after 1 sec
}